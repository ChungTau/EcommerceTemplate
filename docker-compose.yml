version: '3.8'

services:
  ecommerce-db:
    image: postgres:latest
    container_name: ecommerce-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ecommerce-db-data:/var/lib/postgresql/data
  
  ecommerce-api:
    container_name: ecommerce-api
    build:
      context: ./ecommerce-api
      dockerfile: Dockerfile
    ports:
      - "8000:8080"
    volumes:
      - ./ecommerce-api:/app
    depends_on:
      - ecommerce-db
      - ecommerce-keycloak
    env_file:
      - ./.env
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005"
  
  ecommerce-ui:
    container_name: ecommerce-ui
    build:
      context: ./ecommerce-ui
      dockerfile: Dockerfile
    volumes:
      - ./ecommerce-ui:/app
      - ./ecommerce-ui/node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - ecommerce-api

  ecommerce-keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: ecommerce-keycloak
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - ecommerce-db

volumes:
  ecommerce-db-data: